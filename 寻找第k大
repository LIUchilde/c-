//有一个整数数组，请你根据快速排序的思路，找出数组中第K大的数。

//给定一个整数数组a,同时给定它的大小n和要找的K(K在1到n之间)，请返回第K大的数，保证答案存在。

//测试样例：
//[1,3,5,2,2],5,3
//返回：2
class Finder {
public:
    void HeapAdjust(vector<int>&a,int i,int heapsize)
    {
        int l=2*i+1;
        int r=2*i+2;
        int max=i;
        if(l<heapsize&&a[l]>a[max])
        max=l;
        if(r<heapsize&&a[r]>a[max])
        max=r;
        if(max!=i)
        {
            swap(a[i],a[max]);
            HeapAdjust(a,max,heapsize);
        }
 
    }
    void buildMaxHeap(vector<int>&a,int heapsize)
    {
        for(int i=(heapsize/2)-1;i>=0;i--)
        HeapAdjust(a,i,heapsize);
    }
     
    int findKth(vector<int> a, int n, int K) {
        int size=n;
        buildMaxHeap(a,size);
        for(int i=size-1;i >= n - K + 1;i--)
        {
            swap(a[0],a[i]);
            size--;
            HeapAdjust(a,0,size);
        }
        return a[0];
    }
};
