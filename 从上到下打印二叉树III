class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>vec;
        if(root == NULL){
            return vec;
        }
        stack<TreeNode*>s1;
        stack<TreeNode*>s2;
        s1.push(root);
        while(!s1.empty()||!s2.empty()){
            if(!s1.empty()){
                vector<int>res;
                while(!s1.empty()){
                    TreeNode* node = s1.top();
                    s1.pop();
                    res.push_back(node->val);
                    if(node->left != NULL){
                        s2.push(node->left);
                    }
                    if(node->right != NULL){
                        s2.push(node->right);
                    }
                }
                vec.push_back(res);
            }
            if(!s2.empty()){
                vector<int>res;
                while(!s2.empty()){
                    TreeNode* node = s2.top();
                    s2.pop();
                    res.push_back(node->val);
                    if(node->right != NULL){
                        s1.push(node->right);
                    }
                    if(node->left != NULL){
                        s1.push(node->left);
                    }
                }
                vec.push_back(res);
            }
        }
        return vec;
    }
};
